{"version":3,"sources":["models/banner/indexActive.tsx","services/banner.tsx"],"names":["__webpack_exports__","namespace","state","modalVisible","modalType","tabKey","focusList","currentItem","previewVisible","previewImage","subscriptions","setup","_a","dispatch","history","listen","location","pathname","type","payload","__assign","__WEBPACK_IMPORTED_MODULE_1_query_string__","search","effects","query","_b","call","put","__WEBPACK_IMPORTED_MODULE_0__services_banner__","data","_c","sent","success","console","log","focus","queryModifyFocus","method","__WEBPACK_IMPORTED_MODULE_2_antd__","addFocus","reducers","updateState","showModal","hideModal","params","Object","__WEBPACK_IMPORTED_MODULE_2__utils_request__","url","indexbanner","SystemAdmin","__WEBPACK_IMPORTED_MODULE_0__utils_utils__","modifyFocus","replace","id","api","__WEBPACK_IMPORTED_MODULE_1__utils_config__"],"mappings":"s4CAcAA,EAAA,SAEEC,UAAW,cACXC,OACEC,cAAc,EACdC,UAAW,SACXC,OAAQ,IACRC,aACAC,eACAC,gBAAgB,EAChBC,aAAc,IAGhBC,eACEC,MAAK,SAAEC,OAAEC,EAAAD,EAAAC,SAAUD,EAAAE,QACTC,OAAO,SAACC,GACY,wBAAtBA,EAASC,UACXJ,GACEK,KAAM,QACNC,QAAOC,KACFC,EAAA,MAAkBL,EAASM,eAQ1CC,SACIC,MAAK,SAAEZ,EAEDa,WADNN,EAAAP,EAAAO,QACQO,EAAAD,EAAAC,KAAMC,EAAAF,EAAAE,qDACD,SAAMD,EAAKE,EAAA,EAAcR,KAAOD,GAASD,KAAM,oBAAtDW,EAAOC,EAAAC,QACJC,SACPC,QAAQC,IAAIL,EAAM,QACVM,EAAUN,EAAKA,KAAIM,OAC3B,EAAMR,GACJT,KAAM,cACNC,SACEb,UAAW6B,EAAMN,WANnB,mBAGFC,EAAAC,oBAOA,MAAMF,uBAGRO,iBAAgB,SAAExB,EAEZa,SADNN,EAAAP,EAAAO,QACQO,EAAAD,EAAAC,KAAMC,EAAAF,EAAAE,qDACD,SAAMD,EAAKE,EAAA,EAAgBT,GAAWkB,OAAQ,uBAArDR,EAAOC,EAAAC,QACJC,SACPC,QAAQC,IAAIL,EAAM,QAClBS,EAAA,EAAQN,QAAQ,6BAEhB,EAAML,GACJT,KAAM,QACNC,gBANA,YASF,OALAW,EAAAC,QAKA,EAAMJ,GACJT,KAAM,cACNC,SACEhB,cAAc,oBAHlB2B,EAAAC,oBAOA,MAAMF,uBAGRU,SAAQ,SAAE3B,EAEJa,SADNN,EAAAP,EAAAO,QACQO,EAAAD,EAAAC,KAAMC,EAAAF,EAAAE,qDACD,SAAMD,EAAKE,EAAA,EAAgBT,GAAWkB,OAAQ,wBAArDR,EAAOC,EAAAC,QACJC,SACPC,QAAQC,IAAIL,EAAM,QAClBS,EAAA,EAAQN,QAAQ,6BAEhB,EAAML,GACJT,KAAM,QACNC,gBANA,YASF,OALAW,EAAAC,QAKA,EAAMJ,GACJT,KAAM,cACNC,SACEhB,cAAc,oBAHlB2B,EAAAC,oBAOA,MAAMF,wBAIZW,UACEC,YAAW,SAAEvC,EAAeU,OAAEO,EAAAP,EAAAO,QAE5B,OADAc,QAAQC,IAAI,UAAWf,GACvBC,KACKlB,EACAiB,IAGPuB,UAAS,SAAExC,EAAeU,OAAEO,EAAAP,EAAAO,QAC1B,OAAAC,KAAYlB,EAAUiB,GAAShB,cAAc,KAE/CwC,UAAS,SAAEzC,GACT,OAAAkB,KAAYlB,GAAOC,cAAc,8CChHjC,SAAiByC,GACrB,OAAOC,OAAAC,EAAA,EAAAD,EACLE,IAAKC,EACLX,OAAQ,MACRR,KAAMe,SAGJ,SAA0BA,GAC9B,OAAOC,OAAAC,EAAA,EAAAD,EACLE,IAAKzC,EACL+B,OAAQ,MACRR,KAAMe,SAGJ,SAA0BA,EAAaP,GAC3CJ,QAAQC,IAAI,SAAUG,GACtB,IAAMY,EAAcJ,OAAAK,EAAA,EAAAL,CAAgB,eAC9BE,EAAMI,EAAYC,QAAQ,OAAQH,EAAYI,IACpD,OAAOR,OAAAC,EAAA,EAAAD,CAAOzB,GACZ2B,IAAuB,QAAlBV,EAAOA,OAAmBU,EAAIK,QAAQ,MAAOR,EAAOS,IAAMN,EAAIK,QAAQ,OAAQ,KAChFf,GACHR,KAAMe,4NAxBFU,EAAAC,EAAA,EAAAD,IACAN,EAAAM,EAAAN,YAAa1C,EAAAgD,EAAAhD,UAAW6C,EAAAG,EAAAH","file":"static/js/40.15580fa8.chunk.js","sourcesContent":["import { queryFocusList, modifyFocusSer } from '../../services/banner'\nimport * as queryString from 'query-string'\nimport { message } from 'antd'\n\ninterface Istate {\n  modalVisible: boolean,\n  modalType: string,\n  tabKey: string,\n  focusList: any,\n  currentItem: any,\n  previewVisible: boolean,\n  previewImage: string,\n}\n\nexport default {\n\n  namespace: 'indexactive',\n  state: {\n    modalVisible: false,\n    modalType: 'create',\n    tabKey: '1',\n    focusList: {},\n    currentItem: {},\n    previewVisible: false,\n    previewImage: '',\n  },\n\n  subscriptions: {\n    setup ({ dispatch, history }: any) {\n      history.listen((location: any) => {\n        if (location.pathname === '/banner/indexactive') {\n          dispatch({\n            type: 'query',\n            payload: {\n              ...queryString.parse(location.search),\n            },\n          })\n        }\n      })\n    },\n  },\n\n  effects: {\n    * query ({\n      payload,\n    }: any, { call, put }: any) {\n      const data = yield call(queryFocusList, { ...payload, type: 2 })\n      if (data.success) {\n        console.log(data, 'data')\n        const { focus } = data.data\n        yield put({\n          type: 'updateState',\n          payload: {\n            focusList: focus.data,\n          },\n        })\n      } else {\n        throw data\n      }\n    },\n    * queryModifyFocus ({\n      payload,\n    }: any, { call, put }: any) {\n      const data = yield call(modifyFocusSer, payload, { method: 'put' })\n      if (data.success) {\n        console.log(data, 'data')\n        message.success('修改成功')\n        // const { focus } = data.data\n        yield put({\n          type: 'query',\n          payload: {\n          },\n        })\n        yield put({\n          type: 'updateState',\n          payload: {\n            modalVisible: false,\n          },\n        })\n      } else {\n        throw data\n      }\n    },\n    * addFocus ({\n      payload,\n    }: any, { call, put }: any) {\n      const data = yield call(modifyFocusSer, payload, { method: 'post' })\n      if (data.success) {\n        console.log(data, 'data')\n        message.success('修改成功')\n        // const { focus } = data.data\n        yield put({\n          type: 'query',\n          payload: {\n          },\n        })\n        yield put({\n          type: 'updateState',\n          payload: {\n            modalVisible: false,\n          },\n        })\n      } else {\n        throw data\n      }\n    },\n  },\n  reducers: {\n    updateState (state: Istate, { payload }: any) {\n      console.log('payload', payload)\n      return {\n        ...state,\n        ...payload,\n      }\n    },\n    showModal (state: Istate, { payload }: any) {\n      return { ...state, ...payload, modalVisible: true }\n    },\n    hideModal (state: Istate) {\n      return { ...state, modalVisible: false }\n    },\n  },\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/banner/indexActive.tsx","import { getLocalStorage } from '../utils/utils'\nimport config from '../utils/config'\nimport request from '../utils/request'\n\nconst { api } = config\nconst { indexbanner, focusList, modifyFocus } = api\n\nexport function query (params: any) {\n  return request({\n    url: indexbanner,\n    method: 'get',\n    data: params,\n  })\n}\nexport function queryFocusList (params: any) {\n  return request({\n    url: focusList,\n    method: 'get',\n    data: params,\n  })\n}\nexport function modifyFocusSer (params: any, method: any) {\n  console.log('method', method)\n  const SystemAdmin = getLocalStorage('SystemAdmin')\n  const url = modifyFocus.replace(':uid', SystemAdmin.id)\n  return request({\n    url: method.method === 'put' ? url.replace(':id', params.id) : url.replace('/:id', ''),\n    ...method,\n    data: params,\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/banner.tsx"],"sourceRoot":""}