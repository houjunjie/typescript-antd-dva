{"version":3,"sources":["routes/song/SongList/index.tsx","routes/song/SongList/SlModel.tsx"],"names":["Search","__WEBPACK_IMPORTED_MODULE_3_antd__","SongLists","_super","_this","apply","this","arguments","showModal","item","props","dispatch","type","payload","modalVisible","currentItem","handleSearch","e","console","log","__extends","prototype","render","_a","songlists","loading","location","list","pagination","modelTableData","query","pathname","listProps","dataSource","columns","title","dataIndex","val","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","onClick","effects","onChange","page","__WEBPACK_IMPORTED_MODULE_2_dva_router__","push","search","__WEBPACK_IMPORTED_MODULE_4_query_string___default","stringify","__assign","current","pageSize","modalProps","visible","maskClosable","warpClassName","onOk","data","onCancel","__WEBPACK_IMPORTED_MODULE_0_react__","className","span","style","width","placeholder","onSearch","bordered","rowKey","record","id","__WEBPACK_IMPORTED_MODULE_5__SlModel__","PureComponent","__webpack_exports__","Object","__WEBPACK_IMPORTED_MODULE_1_dva__","FormItem","__WEBPACK_IMPORTED_MODULE_1_antd__","Item","formItemLayout","labelCol","wrapperCol","create","_b","_c","form","validateFields","getFieldsValue","__rest","modalOpts","errors","key","__WEBPACK_IMPORTED_MODULE_3_query_string___default","layout","label","hasFeedback","name"],"mappings":"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","file":"static/js/37.3c26a724.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\n// import PropTypes from 'prop-types'\nimport { connect } from 'dva'\nimport { routerRedux } from 'dva/router'\nimport { Row, Col, Input, Table, Button } from 'antd'\nimport queryString from 'query-string'\nimport Model from './SlModel'\n\n// import style from './songlists.less'\nconst { Search } = Input\ninterface Iprops {\n  songlists: any,\n  loading: any,\n  dispatch: any,\n  location: any\n}\nclass SongLists extends React.PureComponent<Iprops> {\n  public showModal = (item: any) => {\n    this.props.dispatch({\n      type: 'songlists/updateState',\n      payload: {\n        modalVisible: true,\n        currentItem: item,\n      },\n    })\n    this.props.dispatch({\n      type: 'songlists/modeltablequery',\n    })\n  }\n  public handleSearch = (e: any) => {\n    console.log(e)\n  }\n  public render () {\n    const {\n      songlists, dispatch, loading, location,\n    } = this.props\n    const {\n      list, pagination, currentItem, modalVisible, modelTableData,\n    } = songlists\n    const { query, pathname } = location\n    const columns = [\n      {\n        title: '歌单编号',\n        dataIndex: 'id',\n      },\n      {\n        title: '歌曲名称',\n        dataIndex: 'songname',\n      },\n      {\n        title: '机顶盒是否显示',\n        dataIndex: 'isshow',\n      },\n      {\n        title: '最后修改人',\n        dataIndex: 'name',\n      },\n      {\n        title: '最后修改时间',\n        dataIndex: 'date',\n      },\n      {\n        title: '歌曲数量',\n        dataIndex: 'number',\n      },\n      {\n        title: '状态',\n        dataIndex: 'status',\n      },\n      {\n        title: '操作',\n        render: (val: any) => <Button onClick={() => this.showModal(val)}>修改</Button>,\n      },\n    ]\n    const listProps = {\n      pagination,\n      dataSource: list,\n      columns,\n      loading: loading.effects['songlist/query'],\n      onChange (page: any) {\n        dispatch(routerRedux.push({\n          pathname,\n          search: queryString.stringify({\n            ...query,\n            page: page.current,\n            pageSize: page.pageSize,\n          }),\n        }))\n      },\n    }\n    const modalProps = {\n      item: currentItem,\n      visible: modalVisible,\n      maskClosable: false,\n      title: '修改歌单歌曲',\n      modelTableData,\n      dispatch,\n      loading,\n      location,\n      warpClassName: 'vertical-center-modal',\n      onOk (data: any) {\n        console.log(data, 'ok')\n      },\n      onCancel () {\n        dispatch({\n          type: 'songlists/updateState',\n          payload: {\n            modalVisible: false,\n          },\n        })\n      },\n    }\n    return (\n      <Fragment>\n        <Row className=\"margin-bottom\">\n          <Col span={24}>\n            <Search style={{ width: 200 }} placeholder=\"请输入要搜索的歌曲\" onSearch={this.handleSearch} />\n          </Col>\n        </Row>\n        <Table\n          {...listProps}\n          bordered={true}\n          // scroll={{ x: 1200 }}\n          // columns={columns}\n          // simple\n          rowKey={(record: any) => record.id}\n        />\n        {modalVisible && <Model {...modalProps} />}\n      </Fragment>\n    )\n  }\n}\nexport default connect(({\n  songlists, loading, dispatch,\n}: Iprops) => ({\n  songlists, loading, dispatch,\n}))(SongLists)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/song/SongList/index.tsx","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { Form, Modal, Table } from 'antd'\nimport { routerRedux } from 'dva/router'\nimport queryString from 'query-string'\n\nconst FormItem = Form.Item\n\nconst formItemLayout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 20,\n  },\n}\ninterface Iprops {\n  item: any,\n  onOk: any,\n  form: any,\n  dispatch: any,\n  loading: any,\n  modelTableData: any,\n  [propsname: string]: any\n}\n\nconst modal = ({\n  item = {},\n  onOk,\n  form: {\n    validateFields,\n    getFieldsValue,\n  },\n  dispatch,\n  loading,\n  modelTableData,\n  ...modalProps\n}: Iprops) => {\n  const handleOk = () => {\n    validateFields((errors: any) => {\n      if (errors) {\n        return\n      }\n      const data = {\n        ...getFieldsValue(),\n        key: item.key,\n      }\n      onOk(data)\n    })\n  }\n  const {\n    pagination, list,\n  } = modelTableData\n  const modalOpts = {\n    ...modalProps,\n    onOk: handleOk,\n    width: '70%',\n  }\n  const columns = [\n    {\n      title: '歌单编号',\n      dataIndex: 'id',\n    },\n    {\n      title: '歌曲名称',\n      dataIndex: 'songname',\n    },\n    {\n      title: '机顶盒是否显示',\n      dataIndex: 'isshow',\n    },\n    {\n      title: '最后修改人',\n      dataIndex: 'name',\n    },\n    {\n      title: '最后修改时间',\n      dataIndex: 'date',\n    },\n    {\n      title: '歌曲数量',\n      dataIndex: 'number',\n    },\n    {\n      title: '状态',\n      dataIndex: 'status',\n    },\n  ]\n  const listProps = {\n    pagination,\n    dataSource: list,\n    columns,\n    loading: loading.effects['songlist/modeltablequery'],\n    onChange (page: any) {\n      dispatch(routerRedux.push({\n        search: queryString.stringify({\n          page: page.current,\n          pageSize: page.pageSize,\n        }),\n      }))\n    },\n  }\n  return (\n    <Modal {...modalOpts}>\n      <Form layout=\"horizontal\">\n        <FormItem className=\"mgb0\" label=\"歌单编号\" hasFeedback={true} {...formItemLayout}>\n          <span>{item.id}</span>\n        </FormItem>\n        <FormItem className=\"mgb0\" label=\"歌单名称\" hasFeedback={true} {...formItemLayout}>\n          <span>{item.name}</span>\n        </FormItem>\n        <FormItem className=\"mgb0\" label=\"歌曲\" hasFeedback={true} {...formItemLayout} >\n          <Table\n            {...listProps}\n            bordered={true}\n          // scroll={{ x: 1200 }}\n          // columns={columns}\n            // simple\n            rowKey={(record: any) => record.id}\n          />\n        </FormItem>\n      </Form>\n    </Modal>\n  )\n}\nexport default Form.create()(modal)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/song/SongList/SlModel.tsx"],"sourceRoot":""}