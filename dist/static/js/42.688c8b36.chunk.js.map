{"version":3,"sources":["routes/users/freezeUser.tsx"],"names":["reasonType","__WEBPACK_IMPORTED_MODULE_5__utils_config__","Search","__WEBPACK_IMPORTED_MODULE_3_antd__","FreezeUser","_super","_this","apply","this","arguments","sFreezeTime","h","time","nowTime","Date","getTime","temp","showModal","item","dispatch","props","confirm","title","content","onOk","type","payload","status","freezeid","freeze_user_id","onCancel","console","log","handleSearch","val","searchValue","__extends","prototype","render","_a","freezeuser","loading","location","list","pagination","query","pathname","listProps","dataSource","columns","dataIndex","data","__WEBPACK_IMPORTED_MODULE_0_react___default","a","createElement","src","freeze_user","avatar","alt","name","user_id","freeze_time","created_at","sorter","b","onClick","effects","onChange","page","__WEBPACK_IMPORTED_MODULE_2_dva_router__","push","search","__WEBPACK_IMPORTED_MODULE_4_query_string___default","stringify","__assign","current_page","current","per_page","pageSize","__WEBPACK_IMPORTED_MODULE_0_react__","className","align","span","style","marginBottom","width","placeholder","onSearch","enterButton","bordered","rowKey","record","id","PureComponent","__webpack_exports__","Object","__WEBPACK_IMPORTED_MODULE_1_dva__"],"mappings":"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","file":"static/js/42.688c8b36.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\n// import PropTypes from 'prop-types'\nimport { connect } from 'dva'\nimport { routerRedux } from 'dva/router'\nimport { Row, Col, Input, Table, Modal, Button } from 'antd'\nimport queryString from 'query-string'\nimport config from '../../utils/config'\n\nconst { reasonType } = config\n// import style from './songlists.less'\nconst { Search } = Input\n\ninterface Iprops {\n  freezeuser: any,\n  loading: any,\n  dispatch: any,\n  location: any\n}\n\nclass FreezeUser extends React.PureComponent<Iprops> {\n\n  public sFreezeTime = (h: number, time: string) => {\n    const nowTime = new Date().getTime()\n    const cureateTime = new Date(time).getTime()\n    const freezeTime = h * 60 * 60 * 1000\n    const temp = (cureateTime + freezeTime - nowTime) / (60 * 60 * 1000)\n    return temp > 0 ? temp : 0\n  }\n  public showModal = (item: any) => {\n    const { dispatch } = this.props\n    Modal.confirm({\n      title: '解除封禁',\n      content: '您是否确认要解除封禁',\n      onOk () {\n        dispatch({\n          type: 'freezeuser/freezeUser',\n          payload: {\n            status: 1,\n            freezeid: item.freeze_user_id,\n          },\n        })\n      },\n      onCancel () {console.log(1)},\n    })\n  }\n  public handleSearch = (val: string) => {\n    this.props.dispatch({\n      type: 'freezeuser/updateState',\n      payload: {\n        searchValue: val,\n      },\n    })\n    this.props.dispatch({\n      type: 'freezeuser/query',\n      payload: {},\n    })\n  }\n  public render () {\n    const {\n      freezeuser, dispatch, loading, location,\n    } = this.props\n    const {\n      list, pagination,\n    } = freezeuser\n    const { query, pathname } = location\n    const columns = [\n      {\n        title: '序号',\n        dataIndex: 'id',\n      },\n      {\n        title: '用户头像',\n        dataIndex: '',\n        render: (item: any, data: any) => <img src={data.freeze_user.avatar} alt=\"用户头像\" />,\n      },\n      {\n        title: '用户昵称',\n        dataIndex: '',\n        render: (item: any, data: any) => <span>{data.freeze_user.name}</span>,\n      },\n      {\n        title: '用户id',\n        dataIndex: 'freeze_user',\n        render: (item: any) => <span>{item.user_id}</span>,\n      },\n      {\n        title: '封禁时长',\n        dataIndex: 'freeze_time',\n        render: (item: string) => <span>{item}h</span>,\n      },\n      {\n        title: '剩余时长',\n        dataIndex: '',\n        render: (item: any, data: any) => <span>{this.sFreezeTime(data.freeze_time, data.created_at)}h</span>,\n      },\n      {\n        title: '封禁时间',\n        dataIndex: 'created_at',\n        sorter: (a: any, b: any) => {\n          return new Date(a.created_at).getTime() - new Date(b.created_at).getTime()\n        },\n      },\n      {\n        title: '操作人',\n        dataIndex: 'user_name',\n      },\n      {\n        title: '原因',\n        dataIndex: 'reason_type',\n        render: (item: number) => <span>{reasonType[item - 1]}</span>,\n      },\n      {\n        title: '备注',\n        dataIndex: 'remark',\n      },\n      {\n        title: '操作',\n        render: (val: any) => <Button onClick={() => this.showModal(val)}>解封</Button>,\n      },\n    ]\n    const listProps = {\n      pagination,\n      dataSource: list,\n      columns,\n      loading: loading.effects['freezeuser/query'],\n      onChange (page: any) {\n        dispatch(routerRedux.push({\n          pathname,\n          search: queryString.stringify({\n            ...query,\n            current_page: page.current,\n            per_page: page.pageSize,\n          }),\n        }))\n      },\n    }\n    return (\n      <Fragment>\n        <Row className=\"margin-bottom\" type=\"flex\" align=\"middle\">\n          <Col span={6}>\n            <h3 style={{ marginBottom: 0 }}>封禁的用户</h3>\n          </Col>\n          <Col span={18} className=\"text-right\">\n            <Search style={{ width: 200 }} placeholder=\"请输入要搜索的昵称\" onSearch={this.handleSearch} enterButton={true} />\n          </Col>\n        </Row>\n        <Table\n          {...listProps}\n          bordered={true}\n          // scroll={{ x: 1200 }}\n          // columns={columns}\n          // simple\n          rowKey={(record: any) => record.id}\n        />\n        {/* {modalVisible && <Modal {...modalOpts}\n          footer={[\n            <Button key=\"back\" type=\"ghost\" size=\"large\" onClick={this.handleCancel}>返 回</Button>,\n            <Button key=\"submit\" type=\"primary\" size=\"large\" loading={this.state.loading} onClick={this.handleOk}>\n              提 交\n            </Button>,\n          ]}\n        >确定要解除该用户的封禁？</Modal>} */}\n      </Fragment>\n    )\n  }\n}\nexport default connect(({\n  freezeuser, loading, dispatch,\n}: Iprops) => ({\n  freezeuser, loading, dispatch,\n}))(FreezeUser)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/users/freezeUser.tsx"],"sourceRoot":""}